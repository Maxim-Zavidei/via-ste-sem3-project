@page "/"
@using System.Net.Sockets
@using System.Text
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net
@using Data.Impl;
@using Models;

<LoginComponent.Login/>


@code{


    public async Task ConnectTo()
    {
       /* UserData userData = new UserData();
        await userData.StartConnection("localhost", 8080);
        User us = await userData.ValidateUserAsync(this.username, this.password);
        this.newusername = us.Username;
        this.newpassword = us.Password;*/

        /*string toSend = "login";

            TcpClient client = new TcpClient("localhost", 8080);

            NetworkStream stream = client.GetStream();

            // Sending
            int toSendLen = System.Text.Encoding.ASCII.GetByteCount(toSend);
            byte[] toSendBytes = System.Text.Encoding.ASCII.GetBytes(toSend);
            byte[] toSendLenBytes = System.BitConverter.GetBytes(toSendLen);
            stream.Write(toSendLenBytes);
            stream.Write(toSendBytes);

            string json = JsonSerializer.Serialize(new User{
                id=0,
                username = this.username,
                password = this.password,
                email = ""
            });
            toSendLen = System.Text.Encoding.ASCII.GetByteCount(json);
            toSendBytes = System.Text.Encoding.ASCII.GetBytes(json);
            toSendLenBytes = System.BitConverter.GetBytes(toSendLen);
            stream.Write(toSendLenBytes);
            stream.Write(toSendBytes);

            // Receiving
            byte[] rcvLenBytes = new byte[4];
            stream.Read(rcvLenBytes);
            int rcvLen = System.BitConverter.ToInt32(rcvLenBytes, 0);
            byte[] rcvBytes = new byte[rcvLen];
            stream.Read(rcvBytes);
            String rcv = System.Text.Encoding.ASCII.GetString(rcvBytes);
            if(rcv.Equals("Successful"))
        {
            System.Console.WriteLine("yoyo");
            errorMessage = rcv;
            rcvLenBytes = new byte[4];
            stream.Read(rcvLenBytes);
            rcvLen = System.BitConverter.ToInt32(rcvLenBytes, 0);
            rcvBytes = new byte[rcvLen];
            stream.Read(rcvBytes);
            rcv = System.Text.Encoding.ASCII.GetString(rcvBytes);
            User user = JsonSerializer.Deserialize<User>(rcv);
            newusername = user.username;
            newpassword = user.password;

        } else errorMessage = rcv;

            Console.WriteLine("Client received: " + rcv);


            stream.Close();
            client.Close();



        

       /* byte[] dataToServer = Encoding.ASCII.GetBytes("login");
        stream.Write(dataToServer, 0, dataToServer.Length);
        string json = JsonSerializer.Serialize(new User{
            id=1,
            username = "yoyo",
            password = "yoyo123",
            email = "yoyo@gmail.com"
        });
        dataToServer = Encoding.ASCII.GetBytes(json);
        stream.Write(dataToServer, 0, dataToServer.Length);

        byte[] dataFromServer = new byte[1024];
        int bytesRead = stream.Read(dataFromServer, 0, dataFromServer.Length);
        string response = Encoding.ASCII.GetString(dataFromServer, 0, bytesRead);
        if(response.Equals("Successful"))
        {
            System.Console.WriteLine("yoyo");
            errorMessage = response;

        } else errorMessage = response;
        
        stream.Close();
        client.Close();*/
    }
}