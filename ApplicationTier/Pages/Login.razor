@page "/login"
@namespace LoginComponent
@using Authentication
@using System.ComponentModel.DataAnnotations

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudGrid Justify="Justify.Center">
    <MudItem xs="4" Class="my-8">
            <MudPaper Elevation="14" Class="d-flex align-center justify-center py-8">
            <table>
                <tr>
                    <td>
                        <MudText Typo="Typo.h4" Align="Align.Center" Class="ma-5">Sign In</MudText>
                        <img class="profile-img" src="https://lh5.googleusercontent.com/-b0-k99FZlyE/AAAAAAAAAAI/AAAAAAAAAAA/eu7opA4byxI/photo.jpg?sz=120">
                    </td>
                </tr>
                <tr>
                    <td>
                        <EditForm Model="@LoginFormModel" OnValidSubmit="OnValidLoginFormSubmit">
                            <DataAnnotationsValidator/>
                
                            <MudTextField Label="Email" Class="mt-3" @bind-Value="LoginFormModel.Email" For="@(() => LoginFormModel.Email)" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.AlternateEmail"/>
                            <MudTextField Label="Password" Class="mt-3" @bind-Value="LoginFormModel.Password" For="@(() => LoginFormModel.Password)" InputType="@PasswordInputType" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibiltyState"/>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Class="py-2 mt-4">Login</MudButton>

                            <MudText Typo="Typo.body2" Align="Align.Center" Class="my-4" FullWidth="true" Color="Color.Error">@ErrorMessage</MudText>
                            <MudDivider/>
                            <a href="/register" class="text-center register-href">Don't have an account? Register here </a>
                        </EditForm>
                    </td>
                </tr>
            </table>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    
    // Variables for handling the state and behaviour of the show password button.
    private InputType PasswordInputType = InputType.Password;
    private string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private bool IsPasswordVisible;

    private void TogglePasswordVisibiltyState() {
        if (IsPasswordVisible) {
            IsPasswordVisible = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInputType = InputType.Password;
        } else {
            IsPasswordVisible = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInputType = InputType.Text;
        }
    }

    // Class that contains the input data of the login form.
    public class LoginForm {

        [Required]
        //[EmailAddress]
        public string Email { get; set; }

        [Required]
        //[StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }
        
    }

    private LoginForm LoginFormModel = new LoginForm();
    private string ErrorMessage;

    private async Task OnValidLoginFormSubmit(EditContext context) {
        ErrorMessage = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).StartConnection();
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(LoginFormModel.Email, LoginFormModel.Password);
            //NavigationManager.NavigateTo("/");
        } catch (Exception e) {
            ErrorMessage = e.Message;
        }
    }
}
