@using Authentication
@using ApplicationTier.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
<MudNavMenu>
    
    <MudTextField Typo="Typo.h6" Class="px-4" ReadOnly="true" @bind-Value="FullName"></MudTextField>
    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Control Panel</MudText>

    <MudDivider Class="my-2"/>
    
    <MudNavLink Href="/calendar" Icon="@Icons.Filled.CalendarToday">Calendar</MudNavLink>
    <MudNavLink Href="/friends" Icon="@Icons.Filled.People">Friends</MudNavLink>
    <MudNavGroup Title="Settings" Icon="@Icons.Filled.Settings" Expanded="false">
        <MudNavLink Href="/sharing" Icon="@Icons.Filled.Share" IconColor="Color.Success">Sharing</MudNavLink>
        <MudNavLink Href="/security" Icon="@Icons.Filled.Security" IconColor="Color.Info">Security</MudNavLink>
    </MudNavGroup>
    <MudNavLink Href="/about" Icon="@Icons.Filled.Article">About</MudNavLink>
</MudNavMenu>


@code{
    [Parameter]
    public String FullName {get;set;}

        protected override void OnParametersSet()
        {
            try{
            User user = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GetCachedUser();
            FullName = user.FirstName + " " + user.LastName;
            } catch(Exception e)
            {
                FullName = "Anonymous";
            }
        }
}